<?php
/**
 * DialruleApplication
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SpectrumVoip\\\\NetSapiens
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NetSapiens API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SpectrumVoip\\\\NetSapiens\Model;
use \SpectrumVoip\\\\NetSapiens\ObjectSerializer;

/**
 * DialruleApplication Class Doc Comment
 *
 * @category Class
 * @description This is the application that the call will be routed using. It works in partnership with dial-rule-translation-destination-user and dial-rule-translation-destination-host to forward to a next destination.
 * @package  SpectrumVoip\\\\NetSapiens
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DialruleApplication
{
    /**
     * Possible values of this enum
     */
    public const AVAILABLE_NUMBER = 'available-number';

    public const TO_VOICEMAIL_RESIDENTIAL = 'to-voicemail-residential';

    public const TO_CALLQUEUE = 'to-callqueue';

    public const TO_CALLQUEUE_ANNOUNCE_COUNT_CALLERS_AHEAD = 'to-callqueue-announce-count-callers-ahead';

    public const TO_CALLQUEUE_ANNOUNCE_EXPECTED_WAIT_TIME = 'to-callqueue-announce-expected-wait-time';

    public const TO_CONNECTION = 'to-connection';

    public const TO_CONNECTION_OR_USER_NO_FAILOVER = 'to-connection-or-user-no-failover';

    public const TO_SINGLE_DEVICE = 'to-single-device';

    public const TO_USER = 'to-user';

    public const TO_USER_RESIDENTIAL = 'to-user-residential';

    public const TO_VOICEMAIL = 'to-voicemail';

    public const SPAM_SCREENING = 'spam-screening';

    public const TO_CONNECTION_BLOCK_CALLER_ID = 'to-connection-block-caller-id';

    public const TO_CONNECTION_NO_TIMEOUT = 'to-connection-no-timeout';

    public const TO_CONNECTION_ADD_HEADER_FORCE_CALLER_ID = 'to-connection-add-header-force-caller-id';

    public const TO_CONNECTION_ADD_HEADER_NO_TIMEOUT = 'to-connection-add-header-no-timeout';

    public const TO_CONNECTION_ADD_HEADER = 'to-connection-add-header';

    public const TO_SINGLE_DEVICE_ADD_HEADER_ALLOW_VOICEMAIL = 'to-single-device-add-header-allow-voicemail';

    public const TO_SINGLE_DEVICE_ADD_HEADER_ALLOW_VOICEMAIL_RESIDENTIAL = 'to-single-device-add-header-allow-voicemail-residential';

    public const TO_SINGLE_DEVICE_ADD_HEADER = 'to-single-device-add-header';

    public const TO_USER_ADD_HEADER = 'to-user-add-header';

    public const TO_USER_RESIDENTIAL_ADD_HEADER = 'to-user-residential-add-header';

    public const TO_USER_NOTIFY_OF_RECORDING = 'to-user-notify-of-recording';

    public const HANGUP = 'hangup';

    public const TO_USER_ANSWER_AND_FAKE_RINGBACK = 'to-user-answer-and-fake-ringback';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AVAILABLE_NUMBER,
            self::TO_VOICEMAIL_RESIDENTIAL,
            self::TO_CALLQUEUE,
            self::TO_CALLQUEUE_ANNOUNCE_COUNT_CALLERS_AHEAD,
            self::TO_CALLQUEUE_ANNOUNCE_EXPECTED_WAIT_TIME,
            self::TO_CONNECTION,
            self::TO_CONNECTION_OR_USER_NO_FAILOVER,
            self::TO_SINGLE_DEVICE,
            self::TO_USER,
            self::TO_USER_RESIDENTIAL,
            self::TO_VOICEMAIL,
            self::SPAM_SCREENING,
            self::TO_CONNECTION_BLOCK_CALLER_ID,
            self::TO_CONNECTION_NO_TIMEOUT,
            self::TO_CONNECTION_ADD_HEADER_FORCE_CALLER_ID,
            self::TO_CONNECTION_ADD_HEADER_NO_TIMEOUT,
            self::TO_CONNECTION_ADD_HEADER,
            self::TO_SINGLE_DEVICE_ADD_HEADER_ALLOW_VOICEMAIL,
            self::TO_SINGLE_DEVICE_ADD_HEADER_ALLOW_VOICEMAIL_RESIDENTIAL,
            self::TO_SINGLE_DEVICE_ADD_HEADER,
            self::TO_USER_ADD_HEADER,
            self::TO_USER_RESIDENTIAL_ADD_HEADER,
            self::TO_USER_NOTIFY_OF_RECORDING,
            self::HANGUP,
            self::TO_USER_ANSWER_AND_FAKE_RINGBACK
        ];
    }
}



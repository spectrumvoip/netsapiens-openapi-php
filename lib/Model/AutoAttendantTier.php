<?php
/**
 * AutoAttendantTier
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SpectrumVoip\\\\NetSapiens
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NetSapiens API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SpectrumVoip\\\\NetSapiens\Model;

use \ArrayAccess;
use \SpectrumVoip\\\\NetSapiens\ObjectSerializer;

/**
 * AutoAttendantTier Class Doc Comment
 *
 * @category Class
 * @package  SpectrumVoip\\\\NetSapiens
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AutoAttendantTier implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AutoAttendantTier';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'intro_greetings' => 'string',
        'audio' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOptionAutoAttendantAudio',
        'unassigned_key_press' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions',
        'no_key_press' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions',
        '_3_digit_dial_by_extension' => '\SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault',
        '_4_digit_dial_by_extension' => '\SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault',
        '_5_digit_dial_by_extension' => '\SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault',
        'option_1' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_2' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_3' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_4' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_5' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_6' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_7' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_8' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_9' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_0' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption',
        'option_' => '\SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'intro_greetings' => null,
        'audio' => null,
        'unassigned_key_press' => null,
        'no_key_press' => null,
        '_3_digit_dial_by_extension' => null,
        '_4_digit_dial_by_extension' => null,
        '_5_digit_dial_by_extension' => null,
        'option_1' => null,
        'option_2' => null,
        'option_3' => null,
        'option_4' => null,
        'option_5' => null,
        'option_6' => null,
        'option_7' => null,
        'option_8' => null,
        'option_9' => null,
        'option_0' => null,
        'option_' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'intro_greetings' => false,
        'audio' => false,
        'unassigned_key_press' => false,
        'no_key_press' => false,
        '_3_digit_dial_by_extension' => false,
        '_4_digit_dial_by_extension' => false,
        '_5_digit_dial_by_extension' => false,
        'option_1' => false,
        'option_2' => false,
        'option_3' => false,
        'option_4' => false,
        'option_5' => false,
        'option_6' => false,
        'option_7' => false,
        'option_8' => false,
        'option_9' => false,
        'option_0' => false,
        'option_' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'intro_greetings' => 'intro-greetings',
        'audio' => 'audio',
        'unassigned_key_press' => 'unassigned-key-press',
        'no_key_press' => 'no-key-press',
        '_3_digit_dial_by_extension' => '3-digit-dial-by-extension',
        '_4_digit_dial_by_extension' => '4-digit-dial-by-extension',
        '_5_digit_dial_by_extension' => '5-digit-dial-by-extension',
        'option_1' => 'option-1',
        'option_2' => 'option-2',
        'option_3' => 'option-3',
        'option_4' => 'option-4',
        'option_5' => 'option-5',
        'option_6' => 'option-6',
        'option_7' => 'option-7',
        'option_8' => 'option-8',
        'option_9' => 'option-9',
        'option_0' => 'option-0',
        'option_' => 'option-*'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'intro_greetings' => 'setIntroGreetings',
        'audio' => 'setAudio',
        'unassigned_key_press' => 'setUnassignedKeyPress',
        'no_key_press' => 'setNoKeyPress',
        '_3_digit_dial_by_extension' => 'set3DigitDialByExtension',
        '_4_digit_dial_by_extension' => 'set4DigitDialByExtension',
        '_5_digit_dial_by_extension' => 'set5DigitDialByExtension',
        'option_1' => 'setOption1',
        'option_2' => 'setOption2',
        'option_3' => 'setOption3',
        'option_4' => 'setOption4',
        'option_5' => 'setOption5',
        'option_6' => 'setOption6',
        'option_7' => 'setOption7',
        'option_8' => 'setOption8',
        'option_9' => 'setOption9',
        'option_0' => 'setOption0',
        'option_' => 'setOption'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'intro_greetings' => 'getIntroGreetings',
        'audio' => 'getAudio',
        'unassigned_key_press' => 'getUnassignedKeyPress',
        'no_key_press' => 'getNoKeyPress',
        '_3_digit_dial_by_extension' => 'get3DigitDialByExtension',
        '_4_digit_dial_by_extension' => 'get4DigitDialByExtension',
        '_5_digit_dial_by_extension' => 'get5DigitDialByExtension',
        'option_1' => 'getOption1',
        'option_2' => 'getOption2',
        'option_3' => 'getOption3',
        'option_4' => 'getOption4',
        'option_5' => 'getOption5',
        'option_6' => 'getOption6',
        'option_7' => 'getOption7',
        'option_8' => 'getOption8',
        'option_9' => 'getOption9',
        'option_0' => 'getOption0',
        'option_' => 'getOption'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('intro_greetings', $data ?? [], null);
        $this->setIfExists('audio', $data ?? [], null);
        $this->setIfExists('unassigned_key_press', $data ?? [], null);
        $this->setIfExists('no_key_press', $data ?? [], null);
        $this->setIfExists('_3_digit_dial_by_extension', $data ?? [], null);
        $this->setIfExists('_4_digit_dial_by_extension', $data ?? [], null);
        $this->setIfExists('_5_digit_dial_by_extension', $data ?? [], null);
        $this->setIfExists('option_1', $data ?? [], null);
        $this->setIfExists('option_2', $data ?? [], null);
        $this->setIfExists('option_3', $data ?? [], null);
        $this->setIfExists('option_4', $data ?? [], null);
        $this->setIfExists('option_5', $data ?? [], null);
        $this->setIfExists('option_6', $data ?? [], null);
        $this->setIfExists('option_7', $data ?? [], null);
        $this->setIfExists('option_8', $data ?? [], null);
        $this->setIfExists('option_9', $data ?? [], null);
        $this->setIfExists('option_0', $data ?? [], null);
        $this->setIfExists('option_', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets intro_greetings
     *
     * @return string|null
     */
    public function getIntroGreetings()
    {
        return $this->container['intro_greetings'];
    }

    /**
     * Sets intro_greetings
     *
     * @param string|null $intro_greetings intro_greetings
     *
     * @return self
     */
    public function setIntroGreetings($intro_greetings)
    {
        if (is_null($intro_greetings)) {
            throw new \InvalidArgumentException('non-nullable intro_greetings cannot be null');
        }
        $this->container['intro_greetings'] = $intro_greetings;

        return $this;
    }

    /**
     * Gets audio
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOptionAutoAttendantAudio|null
     */
    public function getAudio()
    {
        return $this->container['audio'];
    }

    /**
     * Sets audio
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOptionAutoAttendantAudio|null $audio audio
     *
     * @return self
     */
    public function setAudio($audio)
    {
        if (is_null($audio)) {
            throw new \InvalidArgumentException('non-nullable audio cannot be null');
        }
        $this->container['audio'] = $audio;

        return $this;
    }

    /**
     * Gets unassigned_key_press
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions|null
     */
    public function getUnassignedKeyPress()
    {
        return $this->container['unassigned_key_press'];
    }

    /**
     * Sets unassigned_key_press
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions|null $unassigned_key_press unassigned_key_press
     *
     * @return self
     */
    public function setUnassignedKeyPress($unassigned_key_press)
    {
        if (is_null($unassigned_key_press)) {
            throw new \InvalidArgumentException('non-nullable unassigned_key_press cannot be null');
        }
        $this->container['unassigned_key_press'] = $unassigned_key_press;

        return $this;
    }

    /**
     * Gets no_key_press
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions|null
     */
    public function getNoKeyPress()
    {
        return $this->container['no_key_press'];
    }

    /**
     * Sets no_key_press
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantFailOptions|null $no_key_press no_key_press
     *
     * @return self
     */
    public function setNoKeyPress($no_key_press)
    {
        if (is_null($no_key_press)) {
            throw new \InvalidArgumentException('non-nullable no_key_press cannot be null');
        }
        $this->container['no_key_press'] = $no_key_press;

        return $this;
    }

    /**
     * Gets _3_digit_dial_by_extension
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null
     */
    public function get3DigitDialByExtension()
    {
        return $this->container['_3_digit_dial_by_extension'];
    }

    /**
     * Sets _3_digit_dial_by_extension
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null $_3_digit_dial_by_extension When enabled this rule is available to be user though it may not be active as the timeframe might not match the current time or there could be other hihger priority timeframes.
     *
     * @return self
     */
    public function set3DigitDialByExtension($_3_digit_dial_by_extension)
    {
        if (is_null($_3_digit_dial_by_extension)) {
            throw new \InvalidArgumentException('non-nullable _3_digit_dial_by_extension cannot be null');
        }
        $this->container['_3_digit_dial_by_extension'] = $_3_digit_dial_by_extension;

        return $this;
    }

    /**
     * Gets _4_digit_dial_by_extension
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null
     */
    public function get4DigitDialByExtension()
    {
        return $this->container['_4_digit_dial_by_extension'];
    }

    /**
     * Sets _4_digit_dial_by_extension
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null $_4_digit_dial_by_extension When enabled this rule is available to be user though it may not be active as the timeframe might not match the current time or there could be other hihger priority timeframes.
     *
     * @return self
     */
    public function set4DigitDialByExtension($_4_digit_dial_by_extension)
    {
        if (is_null($_4_digit_dial_by_extension)) {
            throw new \InvalidArgumentException('non-nullable _4_digit_dial_by_extension cannot be null');
        }
        $this->container['_4_digit_dial_by_extension'] = $_4_digit_dial_by_extension;

        return $this;
    }

    /**
     * Gets _5_digit_dial_by_extension
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null
     */
    public function get5DigitDialByExtension()
    {
        return $this->container['_5_digit_dial_by_extension'];
    }

    /**
     * Sets _5_digit_dial_by_extension
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\YesNoStringYesDefault|null $_5_digit_dial_by_extension When enabled this rule is available to be user though it may not be active as the timeframe might not match the current time or there could be other hihger priority timeframes.
     *
     * @return self
     */
    public function set5DigitDialByExtension($_5_digit_dial_by_extension)
    {
        if (is_null($_5_digit_dial_by_extension)) {
            throw new \InvalidArgumentException('non-nullable _5_digit_dial_by_extension cannot be null');
        }
        $this->container['_5_digit_dial_by_extension'] = $_5_digit_dial_by_extension;

        return $this;
    }

    /**
     * Gets option_1
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption1()
    {
        return $this->container['option_1'];
    }

    /**
     * Sets option_1
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_1 option_1
     *
     * @return self
     */
    public function setOption1($option_1)
    {
        if (is_null($option_1)) {
            throw new \InvalidArgumentException('non-nullable option_1 cannot be null');
        }
        $this->container['option_1'] = $option_1;

        return $this;
    }

    /**
     * Gets option_2
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption2()
    {
        return $this->container['option_2'];
    }

    /**
     * Sets option_2
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_2 option_2
     *
     * @return self
     */
    public function setOption2($option_2)
    {
        if (is_null($option_2)) {
            throw new \InvalidArgumentException('non-nullable option_2 cannot be null');
        }
        $this->container['option_2'] = $option_2;

        return $this;
    }

    /**
     * Gets option_3
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption3()
    {
        return $this->container['option_3'];
    }

    /**
     * Sets option_3
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_3 option_3
     *
     * @return self
     */
    public function setOption3($option_3)
    {
        if (is_null($option_3)) {
            throw new \InvalidArgumentException('non-nullable option_3 cannot be null');
        }
        $this->container['option_3'] = $option_3;

        return $this;
    }

    /**
     * Gets option_4
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption4()
    {
        return $this->container['option_4'];
    }

    /**
     * Sets option_4
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_4 option_4
     *
     * @return self
     */
    public function setOption4($option_4)
    {
        if (is_null($option_4)) {
            throw new \InvalidArgumentException('non-nullable option_4 cannot be null');
        }
        $this->container['option_4'] = $option_4;

        return $this;
    }

    /**
     * Gets option_5
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption5()
    {
        return $this->container['option_5'];
    }

    /**
     * Sets option_5
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_5 option_5
     *
     * @return self
     */
    public function setOption5($option_5)
    {
        if (is_null($option_5)) {
            throw new \InvalidArgumentException('non-nullable option_5 cannot be null');
        }
        $this->container['option_5'] = $option_5;

        return $this;
    }

    /**
     * Gets option_6
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption6()
    {
        return $this->container['option_6'];
    }

    /**
     * Sets option_6
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_6 option_6
     *
     * @return self
     */
    public function setOption6($option_6)
    {
        if (is_null($option_6)) {
            throw new \InvalidArgumentException('non-nullable option_6 cannot be null');
        }
        $this->container['option_6'] = $option_6;

        return $this;
    }

    /**
     * Gets option_7
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption7()
    {
        return $this->container['option_7'];
    }

    /**
     * Sets option_7
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_7 option_7
     *
     * @return self
     */
    public function setOption7($option_7)
    {
        if (is_null($option_7)) {
            throw new \InvalidArgumentException('non-nullable option_7 cannot be null');
        }
        $this->container['option_7'] = $option_7;

        return $this;
    }

    /**
     * Gets option_8
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption8()
    {
        return $this->container['option_8'];
    }

    /**
     * Sets option_8
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_8 option_8
     *
     * @return self
     */
    public function setOption8($option_8)
    {
        if (is_null($option_8)) {
            throw new \InvalidArgumentException('non-nullable option_8 cannot be null');
        }
        $this->container['option_8'] = $option_8;

        return $this;
    }

    /**
     * Gets option_9
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption9()
    {
        return $this->container['option_9'];
    }

    /**
     * Sets option_9
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_9 option_9
     *
     * @return self
     */
    public function setOption9($option_9)
    {
        if (is_null($option_9)) {
            throw new \InvalidArgumentException('non-nullable option_9 cannot be null');
        }
        $this->container['option_9'] = $option_9;

        return $this;
    }

    /**
     * Gets option_0
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption0()
    {
        return $this->container['option_0'];
    }

    /**
     * Sets option_0
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_0 option_0
     *
     * @return self
     */
    public function setOption0($option_0)
    {
        if (is_null($option_0)) {
            throw new \InvalidArgumentException('non-nullable option_0 cannot be null');
        }
        $this->container['option_0'] = $option_0;

        return $this;
    }

    /**
     * Gets option_
     *
     * @return \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null
     */
    public function getOption()
    {
        return $this->container['option_'];
    }

    /**
     * Sets option_
     *
     * @param \SpectrumVoip\\\\NetSapiens\Model\AutoAttendantTierOption|null $option_ option_
     *
     * @return self
     */
    public function setOption($option_)
    {
        if (is_null($option_)) {
            throw new \InvalidArgumentException('non-nullable option_ cannot be null');
        }
        $this->container['option_'] = $option_;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}



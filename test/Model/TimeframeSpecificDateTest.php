<?php
/**
 * TimeframeSpecificDateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SpectrumVoip\\\\NetSapiens
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NetSapiens API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace SpectrumVoip\\\\NetSapiens\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * TimeframeSpecificDateTest Class Doc Comment
 *
 * @category    Class
 * @description TimeframeSpecificDate
 * @package     SpectrumVoip\\\\NetSapiens
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class TimeframeSpecificDateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TimeframeSpecificDate"
     */
    public function testTimeframeSpecificDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_id"
     */
    public function testPropertyTimeframeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_parent_id"
     */
    public function testPropertyTimeframeParentId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ordinal_order"
     */
    public function testPropertyOrdinalOrder()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_specific_dates_begin_date"
     */
    public function testPropertyTimeframeSpecificDatesBeginDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_specific_dates_begin_time"
     */
    public function testPropertyTimeframeSpecificDatesBeginTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_specific_dates_end_date"
     */
    public function testPropertyTimeframeSpecificDatesEndDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_specific_dates_end_time"
     */
    public function testPropertyTimeframeSpecificDatesEndTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_type"
     */
    public function testPropertyTimeframeRecurrenceType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_custom_interval"
     */
    public function testPropertyTimeframeRecurrenceCustomInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_custom_interval_count"
     */
    public function testPropertyTimeframeRecurrenceCustomIntervalCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_custom_interval_option"
     */
    public function testPropertyTimeframeRecurrenceCustomIntervalOption()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_end_option"
     */
    public function testPropertyTimeframeRecurrenceEndOption()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_end_date"
     */
    public function testPropertyTimeframeRecurrenceEndDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_expiry_datetime"
     */
    public function testPropertyTimeframeExpiryDatetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "domain"
     */
    public function testPropertyDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_recurrence_rrule"
     */
    public function testPropertyTimeframeRecurrenceRrule()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_next_observance_datetime"
     */
    public function testPropertyTimeframeNextObservanceDatetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timeframe_is_v1"
     */
    public function testPropertyTimeframeIsV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
